name: Test Bun Coverage Report Action

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"
      
      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          bun install --frozen-lockfile
          echo "‚úÖ Dependencies installed successfully"
      
      - name: Run tests with coverage
        run: |
          echo "üß™ Running tests with coverage..."
          bun test --coverage --coverage-reporter=lcov
          echo "‚úÖ Tests completed successfully"
      
      - name: Verify coverage files
        run: |
          echo "üìÅ Checking coverage directory contents:"
          echo "Working directory: $(pwd)"
          echo "All files in current directory:"
          ls -la
          echo ""
          
          # Check default coverage locations
          if [ -d "coverage" ]; then
            echo "‚úÖ coverage/ directory found:"
            ls -la coverage/
          else
            echo "‚ùå coverage/ directory not found"
          fi
          
          echo ""
          echo "üîç Searching for LCOV files:"
          find . -name "*.lcov" -o -name "lcov.info" 2>/dev/null || echo "No LCOV files found"
          
          echo ""
          echo "üìÑ Checking specific LCOV file:"
          if [ -f "coverage/lcov.info" ]; then
            echo "‚úÖ coverage/lcov.info found"
            head -10 coverage/lcov.info
          else
            echo "‚ùå coverage/lcov.info not found"
            echo "Looking for alternative locations..."
            # Check for lcov.info in root
            if [ -f "lcov.info" ]; then
              echo "‚úÖ Found lcov.info in root directory"
              head -10 lcov.info
              # Move to expected location
              mkdir -p coverage
              mv lcov.info coverage/
              echo "üìã Moved lcov.info to coverage/ directory"
            else
              echo "‚ùå No LCOV file found in any location"
              exit 1
            fi
          fi
      
      - name: Test Coverage Report Action
        if: success() && hashFiles('coverage/lcov.info') != ''
        uses: ./
        with:
          lcov-path: coverage/lcov.info
          min-coverage: 65
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload coverage files as artifacts
        if: always() && hashFiles('coverage/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: coverage-files
          path: coverage/
          retention-days: 7